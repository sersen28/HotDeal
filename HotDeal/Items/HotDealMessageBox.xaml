<Window
	x:Class="HotDeal.Items.HotDealMessageBox"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:const="clr-namespace:HotDeal.Resources.Constants;assembly=HotDeal.Resources"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:items="clr-namespace:HotDeal.Items"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:views="clr-namespace:HotDeal.Views"
	x:Name="MessageBox"
	Width="360"
	Height="230"
	mc:Ignorable="d">
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="34" />
	</WindowChrome.WindowChrome>
	<Border Background="{StaticResource DefaultBackground}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" MinHeight="34" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<views:TitleView
				Title="{Binding Title, ElementName=MessageBox, TargetNullValue={x:Null}}"
				Grid.Row="0"
				Type="Message" />
			<TextBlock
				Grid.Row="1"
				Margin="16,0,16,0"
				VerticalAlignment="Center"
				d:Text="TESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTESTTEST"
				FontFamily="{StaticResource NotoMedium}"
				FontSize="20"
				Foreground="{StaticResource DefaultForeground}"
				Text="{Binding Message, ElementName=MessageBox}"
				TextAlignment="Center"
				TextWrapping="Wrap" />
			<Grid Grid.Row="2" Margin="16,0,16,16">
				<Button
					Width="140"
					Click="Cancel"
					Content="확인">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Visibility" Value="Collapsed" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border
											x:Name="border"
											Background="{StaticResource DefaultPoint}"
											CornerRadius="8">
											<TextBlock
												Margin="8"
												d:Text="확인"
												FontFamily="{StaticResource NotoMedium}"
												FontSize="16"
												Foreground="{StaticResource DefaultForeground}"
												Text="{TemplateBinding Content}"
												TextAlignment="Center" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Background" Value="{StaticResource ButtonMousePressed}" />
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="Background" Value="{StaticResource ButtonMousePressed}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type items:HotDealMessageBox}}}" Value="{x:Static const:MessageBoxType.Confirm}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
					<Button
						Width="140"
						Margin="0,0,16,0"
						Click="Cancel">
						<Button.Style>
							<Style TargetType="{x:Type Button}">
								<Setter Property="Content" Value="확인" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border
												x:Name="border"
												Background="{StaticResource DefaultPoint}"
												CornerRadius="8">
												<TextBlock
													Margin="8"
													d:Text="확인"
													FontFamily="{StaticResource NotoMedium}"
													FontSize="16"
													Foreground="{StaticResource DefaultForeground}"
													Text="{TemplateBinding Content}"
													TextAlignment="Center" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Background" Value="{StaticResource ButtonMousePressed}" />
												</Trigger>
												<Trigger Property="IsPressed" Value="True">
													<Setter Property="Background" Value="{StaticResource ButtonMousePressed}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type items:HotDealMessageBox}}}" Value="{x:Static const:MessageBoxType.YesOrNo}">
										<Setter Property="Content" Value="예" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
					<Button Width="140" Click="Cancel">
						<Button.Style>
							<Style TargetType="{x:Type Button}">
								<Setter Property="Content" Value="취소" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border
												x:Name="border"
												Background="{StaticResource ButtonMousePressed}"
												CornerRadius="8">
												<TextBlock
													Margin="8"
													d:Text="취소"
													FontFamily="{StaticResource NotoMedium}"
													FontSize="16"
													Foreground="{StaticResource DefaultForeground}"
													Text="{TemplateBinding Content}"
													TextAlignment="Center" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Background" Value="{StaticResource ButtonMousePressed}" />
												</Trigger>
												<Trigger Property="IsPressed" Value="True">
													<Setter Property="Background" Value="{StaticResource ButtonMousePressed}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type items:HotDealMessageBox}}}" Value="{x:Static const:MessageBoxType.YesOrNo}">
										<Setter Property="Content" Value="아니오" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
					<StackPanel.Style>
						<Style TargetType="{x:Type StackPanel}">
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type items:HotDealMessageBox}}}" Value="{x:Static const:MessageBoxType.ConfirmOrCancel}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type items:HotDealMessageBox}}}" Value="{x:Static const:MessageBoxType.YesOrNo}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</StackPanel.Style>
				</StackPanel>
			</Grid>
		</Grid>
	</Border>
</Window>
